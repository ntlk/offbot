

%h1 
	#{@project.name} 
	%span.project_sparkline
			
/ group the updates by day and count them (update[0] = date, update[1] = count)
- @upDateNums = @project.updates.group_by{|day| day.created_at.strftime("%Y-%m-%d")}.map {|d, items| [d, items.length]}.reverse
%ul#project_sparkline_numbers.hidden
	- @upDateNums.each do |update|
		%li= update[1]

#project_cols
	
	#project_col_left

		- if @project.updates.empty?
			%p No updates on this project yet!
	
		- else 
			#updates
				/ here we're checking if this update is the same day as the last one
				/ if it's not, print the date (changing to "today" and "yesterday" as required)
				- lastday = ''
				- today = Time.new
				- yesterday = today - 86400
				- @project.updates.order("created_at").reverse_each do |update|
					- updateday = update.created_at.strftime("%Y-%m-%d")
					- if updateday != lastday
						- if updateday == today.strftime("%Y-%m-%d")
							%p= 'Today'
						- elsif updateday == yesterday.strftime("%Y-%m-%d")
							%p= 'Yesterday'
						- else
							%p= update.created_at.strftime("%A %d %B")
					.update
						- body = add_line_breaks(extract_reply(update.body))
						- body_with_linked_hashtags = auto_link(body, { :hashtag_url_base => "http://#{request.host}/projects/#{@project.id}/updates/", :hashtag_class => "hashtag" })
						%p.credit 
							<span class="author">#{update.person.name.titleize}</span> <span class="date">#{update.created_at.strftime("%I:%M %p")}</span>
							%span.permalink= link_to '∞', update_path(update)
							- if update.editable_by?(current_person)
								%span.edit= link_to 'Edit', edit_update_path(update)
								%span.delete= link_to 'Delete', update, :confirm => 'Are you sure?', :method => :delete
						%p.body= raw(body_with_linked_hashtags)
						
					- lastday = updateday	
						
	#project_col_right			
		
		%h4 Project updates:
		
		%p.updatecount= @project.updates.count
		
		%h4 Project members:

		#pop_box
			%ul.updatepersonlist
				- @project.people.each do |person|
					%li 
						<span class="updatepersoncount">#{updates_count(person, @project)}</span>
						=link_to person.name.titleize, person
				- @project.invitations.uniq.each do |person|
					- unless @project.people.include?(Person.find_by_email(person.email))
						%li <em style="margin-left: 18px; font-size: 90%;">#{person.email[0,20]}…</em>

		#digest_box
			- if @project.weekly_digest_day.nil? 
				%p There is no weekly digest set up for this project
			- else 
				%p The weekly digest for this project comes out on a #{@project.weekly_digest_day}

		.link_box
			%p= link_to "Add an update", :controller => "updates", :action => "new", :project => @project
		.link_box
			%p= link_to 'Edit this project', edit_project_path(@project)
		.link_box
			%p= link_to 'See all your projects', root_url
		#bug_box
			%p <strong>Found a bug?</strong> <a href="https://github.com/stml/offbot/issues/new">Let us know on github</a> or <a href="mailto:ntalia.buckley@gmail.com?subject=Found a bug in Offbott">via email</a>.